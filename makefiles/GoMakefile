GOPATH:=$(shell go env GOPATH)
SRC=$(shell find . -name "*.go")
VERSION=$(shell git describe --tags --always)

ifeq (, $(shell which golangci-lint))
$(warning "could not find golangci-lint in $(PATH), run: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh")
endif

.PHONY: init
# init
init:

.PHONY: fmt
# go fmt
fmt:
	$(info ******************** checking formatting ********************)
	@test -z $(shell gofmt -l $(SRC)) || (gofmt -d $(SRC); exit 1)

.PHONY: lint
# lint
lint: fmt
	$(info ******************** running lint ********************)
	golangci-lint run ./...

.PHONY: test
# go test
test: lint
	$(info ******************** running testing ********************)
	go test -v ./...

.PHONY: build
# go build
build:
	$(info ******************** go build ********************)
	mkdir -p bin/ && go build -mod=vendor -ldflags "-X main.Version=$(VERSION)" -o ./bin/ ./...

# show help
help:
	@echo ''
	@echo 'Usage:'
	@echo ' make [target]'
	@echo ''
	@echo 'Targets:'
	@awk '/^[a-zA-Z\-\_0-9]+:/ { \
    helpMessage = match(lastLine, /^# (.*)/); \
        if (helpMessage) { \
            helpCommand = substr($$1, 0, index($$1, ":")-1); \
            helpMessage = substr(lastLine, RSTART + 2, RLENGTH); \
            printf "\033[36m%-22s\033[0m %s\n", helpCommand,helpMessage; \
        } \
    } \
    { lastLine = $$0 }' $(MAKEFILE_LIST)

.DEFAULT_GOAL := help
